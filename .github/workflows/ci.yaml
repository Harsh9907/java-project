name: Java CI with Maven

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "zulu"

      - name: Build with Maven
        run: mvn clean test

      - name: Code Coverage
        run: mvn jacoco:report

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: target/surefire-reports/

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: target/site/jacoco/

      - name: Display Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test Results
          path: target/surefire-reports/*.xml

      # - name: Generate Coverage Badge
      #   uses: coderabbi/jacoco-badge-generator@v1
      #   with:
      #     jacoco-path: target/site/jacoco/jacoco.xml
      #     readme-path: README.md

      - name: jacoco-reporter
        # You may pin to the exact commit or the version.
        # uses: PavanMudigonda/jacoco-reporter@4fc6bf270fe893e8dda5467e432253a6961345b8
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          # Path to the JaCoCo coverage results file which will be used to generate
          # a report. The only coverage results format supported is the
          # JaCoCo XML schema.

          coverage_results_path: target/site/jacoco/jacoco.xml
          # Optionally specify the level of output detail for the test results.
          # May be one of: `none`, `Minimal`, `normal`, `detailed`, `diagnostic`
          # The default is `normal`.

          output_level: # optional
          # GITHUB_TOKEN to authenticate against API calls to attach
          # report to Workflow Run.

          github_token: # optional, default is ${{github.token}}
          # If true, will skip attaching the Tests Result report to
          # the Workflow Run using a Check Run.  Useful if you just
          # want to produce a Gist-based report via the `gist_name`
          # and `gist_token` input parameters.

          skip_check_run: # optional
          # Comma-separated list of one or more directories to scan for code
          # coverage, relative to the root of the project. Will include all .ps1
          # and .psm1 files under these directories recursively.

          coverage_paths: # optional
          # The name of the code coverage report object that will be attached
          # to the Workflow Run.  Defaults to the name
          # `COVERAGE_RESULTS_<datetime>` where `<datetime>` is in the form
          # `yyyyMMdd_hhmmss`.

          coverage_report_name: # optional
          # The title of the code coverage report that will be embedded in the
          # report itself, which defaults to the same as the
          # `code_coverage_report_name` input.

          coverage_report_title: # optional
          # Minimum allowed coverage percentage as an integer.
          minimum_coverage: # optional
          # Fail the action when the minimum coverage was not met.
          fail_below_threshold: # optional
          # If true, will skip attaching the Tests Result report to the
          # Workflow Run using a Check Run. Useful if your report has 65k
          # characters that is not accepted by Github REST and GraphQL APIs

          publish_only_summary: # optional
